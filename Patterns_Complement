def FrequentWords(Text, k):
    # your code here
    words=[]
    freq=FrequencyMap(Text, k)
    m=max (freq.values())
    for key in freq:
        if freq[key] == m:
            Pattern=key
            words.append(Pattern)
            words.sort()
       return words
       
def FrequencyMap(Text, k):
    # your code here.
    freq={}
    n=len(Text)
    for i in range(n-k+1):
        Pattern=Text[i:i+k]
        freq[Pattern]=0
        for i in range(n-k+1):
            if Pattern ==Text[i:i+k]:
                freq[Pattern]=(freq[Pattern]+1)
    return freq
    
def PatternCount(Text, Pattern):
    # fill in your function here
    count=0
    for i in range(len(Text)-len(Pattern)+1):
        if Text[i:i+len(Pattern)] == Pattern:
            count = count+1
    return count
    
def ReverseComplement(Pattern):   
    # your code here!
    return Complement(Reverse(Pattern))
# Copy your Reverse() function here.
def Reverse(Pattern):
    # your code here
    Pattern= Pattern[::-1]
    return Pattern
# Copy your Complement() function here.
def Complement(Pattern):
    # your code here
    basepair= {"A":"T", "T":"A", "C":"G", "G":"C"}
    complement = ""
    for base in Pattern:
        complement += basepair.get(base)
    return complement
    
def PatternMatching(Pattern, Genome):
    positions = [] # output variable
    # your code here
    for i in range (len(Genome) - len(Pattern)+1):
        if Pattern == Genome [i:i+len(Pattern)]:
          
            positions.append(i)
    return positions
    

